<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alert on Mickael Asghar</title>
    <link>https://Mik3asg.github.io/tags/alert/</link>
    <description>Recent content in Alert on Mickael Asghar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Sep 2024 16:44:01 +0100</lastBuildDate><atom:link href="https://Mik3asg.github.io/tags/alert/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dealing with False Ping Alerts in LogicMonitor: Building a Fallback Ping Monitoring Script for Production VMs</title>
      <link>https://Mik3asg.github.io/posts/implementating-backup-ping-monitoring-solution/</link>
      <pubDate>Tue, 10 Sep 2024 16:44:01 +0100</pubDate>
      
      <guid>https://Mik3asg.github.io/posts/implementating-backup-ping-monitoring-solution/</guid>
      <description>Problem Statement On Friday 6th September 2024 at 21:31, we received an alert from LogicMonitor indicating one of our production web app servers (Tomcat#3) was down, with the message: &amp;quot;The host Tomcat#3 (i-xxxxxxx) is down&amp;quot;. However, shortly after receiving the alert, we attempted to SSH into the VM and confirmed that the server was fully operational.
Root Cause Investigation and Resolution A ticket was promptly raised with our IT service provider, responsible for managing our Cloud Production workloads, immediately following the alert.</description>
    </item>
    
    <item>
      <title>LogicMonitor: Understanding Why CPUBusyPercent Alert Was Not Triggered</title>
      <link>https://Mik3asg.github.io/posts/logicmonior-cpubusypercent-alert/</link>
      <pubDate>Fri, 23 Aug 2024 22:05:29 +0100</pubDate>
      
      <guid>https://Mik3asg.github.io/posts/logicmonior-cpubusypercent-alert/</guid>
      <description>Problem Statement: On 15th August 2024, an incident occurred where the CPUBusyPercent alert did not trigger for one of our Production MySQL Database VMs (DB01), despite the CPU being at 100% for seven minutes. This was unexpected since the threshold settings in LogicMonitor were supposed to trigger alerts under such conditions.
Figure 1: CPU usage plateau at 100% for 6 minutes without triggering an alert.
Analysis: The initial investigation revealed that the CPUBusyPercent alert settings were configured to trigger an alert after five consecutive polls (which equates to 6 minutes of sustained high CPU usage).</description>
    </item>
    
  </channel>
</rss>
